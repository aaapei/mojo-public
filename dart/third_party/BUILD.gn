# Copyright 2015 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("../rules.gni")

group("third_party") {
  deps = [
    ":analyzer",
    ":args",
    ":async",
    ":barback",
    ":charcode",
    ":collection",
    ":crypto",
    ":csslib",
    ":glob",
    ":html",
    ":http_multi_server",
    ":http_parser",
    ":logging",
    ":matcher",
    ":mime",
    ":package_config",
    ":path",
    ":plugin",
    ":pool",
    ":pub_semver",
    ":shelf",
    ":shelf_static",
    ":shelf_web_socket",
    ":source_maps",
    ":source_map_stack_trace",
    ":source_span",
    ":stack_trace",
    ":string_scanner",
    ":test",
    ":unittest",
    ":utf",
    ":watcher",
    ":yaml",
  ]
}

dart_pkg("analyzer") {
  pkg_dir = "analyzer"
}

dart_pkg("args") {
  pkg_dir = "args"
}

dart_pkg("async") {
  pkg_dir = "async"
}

dart_pkg("barback") {
  pkg_dir = "barback"
}

dart_pkg("charcode") {
  pkg_dir = "charcode"
}

dart_pkg("collection") {
  pkg_dir = "collection"
}

dart_pkg("crypto") {
  pkg_dir = "crypto"
}

dart_pkg("csslib") {
  pkg_dir = "csslib"
}

dart_pkg("glob") {
  pkg_dir = "glob"
}

dart_pkg("html") {
  pkg_dir = "html"
}

dart_pkg("http_multi_server") {
  pkg_dir = "http_multi_server"
}

dart_pkg("http_parser") {
  pkg_dir = "http_parser"
}

dart_pkg("logging") {
  pkg_dir = "logging"
}

dart_pkg("matcher") {
  pkg_dir = "matcher"
}

dart_pkg("mime") {
  pkg_dir = "mime"
}

dart_pkg("package_config") {
  pkg_dir = "package_config"
}

dart_pkg("path") {
  pkg_dir = "path"
}

dart_pkg("plugin") {
  pkg_dir = "plugin"
}

dart_pkg("pool") {
  pkg_dir = "pool"
}

dart_pkg("pub_semver") {
  pkg_dir = "pub_semver"
}

dart_pkg("shelf") {
  pkg_dir = "shelf"
}

dart_pkg("shelf_static") {
  pkg_dir = "shelf_static"
}

dart_pkg("shelf_web_socket") {
  pkg_dir = "shelf_web_socket"
}

dart_pkg("source_maps") {
  pkg_dir = "source_maps"
}

dart_pkg("source_map_stack_trace") {
  pkg_dir = "source_map_stack_trace"
}

dart_pkg("source_span") {
  pkg_dir = "source_span"
}

dart_pkg("stack_trace") {
  pkg_dir = "stack_trace"
}

dart_pkg("string_scanner") {
  pkg_dir = "string_scanner"
}

dart_pkg("test") {
  pkg_dir = "test"
}

dart_pkg("unittest") {
  pkg_dir = "unittest"
}

dart_pkg("utf") {
  pkg_dir = "utf"
}

dart_pkg("watcher") {
  pkg_dir = "watcher"
}

dart_pkg("yaml") {
  pkg_dir = "yaml"
}
